"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Dict, List, Optional, Union

ParametersDict = Dict[str, Union[int, str, None]]
@dataclass
class RTCRtpCodecCapability:
    """
    The :class:`RTCRtpCodecCapability` dictionary provides information on
    codec capabilities.
    """
    mimeType: str
    clockRate: int
    channels: Optional[int] = ...
    parameters: ParametersDict = ...
    @property
    def name(self): # -> str:
        ...
    


@dataclass
class RTCRtpCodecParameters:
    """
    The :class:`RTCRtpCodecParameters` dictionary provides information on
    codec settings.
    """
    mimeType: str
    clockRate: int
    channels: Optional[int] = ...
    payloadType: Optional[int] = ...
    rtcpFeedback: List[RTCRtcpFeedback] = ...
    parameters: ParametersDict = ...
    @property
    def name(self): # -> str:
        ...
    
    def __str__(self) -> str:
        ...
    


@dataclass
class RTCRtpRtxParameters:
    ssrc: int
    ...


@dataclass
class RTCRtpCodingParameters:
    ssrc: int
    payloadType: int
    rtx: Optional[RTCRtpRtxParameters] = ...


class RTCRtpDecodingParameters(RTCRtpCodingParameters):
    ...


class RTCRtpEncodingParameters(RTCRtpCodingParameters):
    ...


@dataclass
class RTCRtpHeaderExtensionCapability:
    """
    The :class:`RTCRtpHeaderExtensionCapability` dictionary provides information
    on a supported header extension.
    """
    uri: str
    ...


@dataclass
class RTCRtpHeaderExtensionParameters:
    """
    The :class:`RTCRtpHeaderExtensionParameters` dictionary enables a header
    extension to be configured for use within an :class:`RTCRtpSender` or
    :class:`RTCRtpReceiver`.
    """
    id: int
    uri: str
    ...


@dataclass
class RTCRtpCapabilities:
    """
    The :class:`RTCRtpCapabilities` dictionary provides information about
    support codecs and header extensions.
    """
    codecs: List[RTCRtpCodecCapability] = ...
    headerExtensions: List[RTCRtpHeaderExtensionCapability] = ...


@dataclass
class RTCRtcpFeedback:
    """
    The :class:`RTCRtcpFeedback` dictionary provides information on RTCP feedback
    messages.
    """
    type: str
    parameter: Optional[str] = ...


@dataclass
class RTCRtcpParameters:
    """
    The :class:`RTCRtcpParameters` dictionary provides information on RTCP settings.
    """
    cname: Optional[str] = ...
    mux: bool = ...
    ssrc: Optional[int] = ...


@dataclass
class RTCRtpParameters:
    """
    The :class:`RTCRtpParameters` dictionary describes the configuration of
    an :class:`RTCRtpReceiver` or an :class:`RTCRtpSender`.
    """
    codecs: List[RTCRtpCodecParameters] = ...
    headerExtensions: List[RTCRtpHeaderExtensionParameters] = ...
    muxId: str = ...
    rtcp: RTCRtcpParameters = ...


@dataclass
class RTCRtpReceiveParameters(RTCRtpParameters):
    encodings: List[RTCRtpDecodingParameters] = ...


@dataclass
class RTCRtpSendParameters(RTCRtpParameters):
    encodings: List[RTCRtpEncodingParameters] = ...


